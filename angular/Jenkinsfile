pipeline {
    agent any

    environment {
        // Customize the image name and tag
        DOCKER_IMAGE = 'your-docker-registry/your-angular-app'
        DOCKER_TAG = 'latest'
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the source code from your version control system (e.g., Git)
                checkout scm
            }
        }

        stage('Build Angular App') {
            steps {
                // Use an official Node.js image to build the Angular app
                container('node:14') {
                    sh 'npm install'
                    sh 'npm run build'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                // Use Docker in this stage
                script {
                    // Build the Docker image with the Angular app artifacts
                    sh "docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} ."
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                // Push the Docker image to a registry (e.g., Docker Hub)
                script {
                    sh "docker push ${DOCKER_IMAGE}:${DOCKER_TAG}"
                }
            }
        }
    }

    post {
        success {
            // Add post-build actions if needed
            echo 'Build and Docker image creation successful!'
        }
        failure {
            // Add actions to be executed if the build fails
            echo 'Build and Docker image creation failed!'
        }
    }
}

